#!/bin/bash
# ###########################################################################
# Copyright (c) 2011, Dell Inc.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
#    * Redistributions of source code must retain the above copyright
#      notice, this list of conditions and the following disclaimer.
#    * Redistributions in binary form must reproduce the above copyright
#      notice, this list of conditions and the following disclaimer in the
#      documentation and/or other materials provided with the distribution.
#    * Neither the name of Dell Inc. nor the names of its contributors
#      may be used to endorse or promote products derived from this software
#      without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL DELL INC. BE LIABLE FOR ANY DIRECT,
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
# STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
# IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
# ###########################################################################
# Authors: Chris A. Poblete
# Version: 1.0.0
# ###########################################################################

## Check if BootMode is set to UEFI

wsl enum DCIM_BIOSEnumeration -filter "select CurrentValue,PendingValue from DCIM_BIOSEnumeration where AttributeName='BootMode'"
grep -i uefi response.xml >/dev/null 2>&1
[ $? -ne 0 ] && echo "error: BootMode is not set to UEFI which is required." && exit 1

## Get FQDD for all NICs in slot

wsl enum DCIM_NICView -filter "select FQDD from DCIM_NICView where InstanceID like 'NIC.Slot.%'"
grep "FQDD" response.xml >/dev/null 2>&1
[ $? -ne 0 ] && echo "error: either no instance or no FQDD found! Only looking for NIC in a slot." && exit 1

fqdds=$( grep "FQDD" response.xml | cut -d'>' -f2 | cut -d'<' -f1 )
fail=0

## Get InstanceID from BootSourceSetting corresponding to found FQDDs

echo -n >tmpfile

for item in ${fqdds}; do
  wsl enum DCIM_BootSourceSetting -filter "select InstanceID from DCIM_BootSourceSetting where InstanceID like '%${item}%'"
  grep -i instanceid response.xml >/dev/null 2>&1
  [ $? -ne 0 ] && echo "warning: DCIM_BootSourceSetting for ${item} not found!" && fail=1 && continue
  instanceid=$( grep "InstanceID" response.xml | cut -d'>' -f2 | cut -d'<' -f1 )
  echo "source=${instanceid}" >>tmpfile
  filterstr="${filterstr} -e ${item}"
done

[ ${fail} -ne 0 ] && echo "error: one or more operations failed!" && exit 1

## Sort so that the sequence is from 1 to N

cat tmpfile | sort >tmpfile2
for item in `cat tmpfile2`; do
  sourcearg="${sourcearg} ${item}"
done

## Get the rest of the boot source so the list is complete
wsl enum DCIM_BootSourceSetting -filter "select * from DCIM_BootSourceSetting where BootSourceType='UEFI'"
instanceid=$( grep "InstanceID" response.xml | cut -d'>' -f2 | cut -d'<' -f1 )
others=$( grep "InstanceID" response.xml | cut -d'>' -f2 | cut -d'<' -f1 | grep -v ${filterstr} )

for item in ${others}; do
  sourcearg="${sourcearg} source=${item}"
done

## Set the boot order

wsl invoke DCIM_BootConfigSetting ChangeBootOrderByInstanceID -filter "select * from DCIM_BootConfigSetting where InstanceID='UEFI'" ${sourcearg}
grep -i returnvalue response.xml | grep '>0<' >/dev/null 2>&1
[ $? -ne 0 ] && echo "error: ChangeBootOrderByInstanceID return value is not 0!" && exit 1

## Enabled each boot source corresponding to FQDDs

wsl invoke DCIM_BootConfigSetting ChangeBootSourceState -filter "select * from DCIM_BootConfigSetting where InstanceID='UEFI'" ${sourcearg} EnabledState=1
grep -i returnvalue response.xml | grep '>0<' >/dev/null 2>&1
[ $? -ne 0 ] && echo "error: ChangeBootSourceState return value is not 0!" && exit 1

echo "NOTICE: The change will be applied at the next reboot."
exit 0


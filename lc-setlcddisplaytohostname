#!/bin/bash
# ###########################################################################
# Copyright (c) 2011, Dell Inc.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
#    * Redistributions of source code must retain the above copyright
#      notice, this list of conditions and the following disclaimer.
#    * Redistributions in binary form must reproduce the above copyright
#      notice, this list of conditions and the following disclaimer in the
#      documentation and/or other materials provided with the distribution.
#    * Neither the name of Dell Inc. nor the names of its contributors
#      may be used to endorse or promote products derived from this software
#      without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL DELL INC. BE LIABLE FOR ANY DIRECT,
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
# STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
# IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
# ###########################################################################
# Authors: Chris A. Poblete
# Version: 1.0.0
# ###########################################################################

## Get class instance

wsl enum DCIM_SystemEnumeration -filter "select * from DCIM_SystemEnumeration where InstanceID like '%LCD%'"
[ ! -s response.xml ] && echo "error: enumerate response is empty!" && exit 1

## Get information from the class instance

target=$( grep ":FQDD" response.xml | cut -d'>' -f2 | cut -d'<' -f1 )
group=$( grep ":GroupID" response.xml | cut -d'>' -f2 | cut -d'<' -f1 )
attrname=$( grep ":AttributeName" response.xml | cut -d'>' -f2 | cut -d'<' -f1 )
[ ! -z "${group}" ] && group="${group}#"
attrname="${group}${attrname}"

## Perform the set

wsl invoke DCIM_SystemManagementService SetAttributes Target="${target}" AttributeName="${attrname}" AttributeValue="OS System Name"
grep -i returnvalue response.xml | grep '>0<' >/dev/null 2>&1
[ $? -ne 0 ] && echo "error: SetAttributes return value is not 0!" && exit 1

## Commit the change to the target

wsl invoke DCIM_SystemManagementService CreateTargetedConfigJob Target="${target}"  ScheduledStartTime="TIME_NOW"
grep -i returnvalue response.xml | grep '>4096<' >/dev/null 2>&1
[ $? -ne 0 ] && echo "error: CreateTargetedConfigJob return value is not 4096!" && exit 1

## Get job information

jobid=$( grep "InstanceID" response.xml | cut -d'>' -f2 | cut -d'<' -f1 )

## Monitor job status until complete

timeout=6
waittime=10
while [ ${timeout} -gt 0 ]; do
  wsl get DCIM_LifecycleJob InstanceID="${jobid}"
  [ ! -s response.xml ] && echo "error: get job instance is empty!" && exit 1
  jobstatus=$( grep "JobStatus" response.xml | cut -d'>' -f2 | cut -d'<' -f1 )
  echo "Job ${jobid} status is ${jobstatus}"
  echo ${jobstatus} | grep -i "complete" >/dev/null && break
  echo ${jobstatus} | grep -i "scheduled" >/dev/null && break
  read -t ${waittime} -p "Pausing for ${waittime} seconds to recheck job status."
  echo
  timeout=$((timeout - 1))
done

exit 0


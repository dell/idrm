#!/bin/bash

## Get class instance

wsl enum DCIM_SystemEnumeration -filter "select * from DCIM_SystemEnumeration where InstanceID like '%LCD%'"
[ ! -s response.xml ] && echo "error: enumerate response is empty!" && exit 1

## Get information from the class instance

target=$( grep ":FQDD" response.xml | cut -d'>' -f2 | cut -d'<' -f1 )
group=$( grep ":GroupID" response.xml | cut -d'>' -f2 | cut -d'<' -f1 )
attrname=$( grep ":AttributeName" response.xml | cut -d'>' -f2 | cut -d'<' -f1 )
[ ! -z "${group}" ] && group="${group}#"
attrname="${group}${attrname}"

## Perform the set

wsl invoke DCIM_SystemManagementService SetAttributes Target="${target}" AttributeName="${attrname}" AttributeValue="OS System Name"
grep -i returnvalue response.xml | grep '>0<' >/dev/null 2>&1
[ $? -ne 0 ] && echo "error: SetAttributes return value is not 0!" && exit 1

## Commit the change to the target

wsl invoke DCIM_SystemManagementService CreateTargetedConfigJob Target="${target}"  ScheduledStartTime="TIME_NOW"
grep -i returnvalue response.xml | grep '>4096<' >/dev/null 2>&1
[ $? -ne 0 ] && echo "error: CreateTargetedConfigJob return value is not 4096!" && exit 1

## Get job information

jobid=$( grep "InstanceID" response.xml | cut -d'>' -f2 | cut -d'<' -f1 )

## Monitor job status until complete

timeout=6
waittime=10
while [ ${timeout} -gt 0 ]; do
  wsl get DCIM_LifecycleJob InstanceID="${jobid}"
  [ ! -s response.xml ] && echo "error: get job instance is empty!" && exit 1
  jobstatus=$( grep "JobStatus" response.xml | cut -d'>' -f2 | cut -d'<' -f1 )
  echo "Job ${jobid} status is ${jobstatus}"
  echo ${jobstatus} | grep -i "complete" >/dev/null && break
  echo ${jobstatus} | grep -i "scheduled" >/dev/null && break
  read -t ${waittime} -p "Pausing for ${waittime} seconds to recheck job status."
  echo
  timeout=$((timeout - 1))
done

exit 0

